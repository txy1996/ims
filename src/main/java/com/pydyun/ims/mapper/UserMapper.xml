<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pydyun.ims.dao.UserDAO">

    <!-- 添加用户 -->
   <insert id="addUser" useGeneratedKeys="true" keyProperty="id"
            parameterType="User">
    <!-- INSERT INTO sys_user(username,password,salt,create_time,state,real_name,gender,nation,birth,urtname,urautograph,mobile,email,department,position,note,activate_time,code,maileCode)
    VALUES(#{username},#{password},#{salt},#{createTime},#{state},#{realName},#{gender},#{nation},#{birth},#{urtname},#{urautograph},#{mobile},#{email},#{department},#{position},#{note},#{activateTime},#{code},#{maileCode}) -->
  INSERT INTO sys_user(username,password,salt,create_time,state,real_name,gender,nation,birth,urautograph,mobile,email,department,position,note,activate_time,code,maileCode)
    VALUES(#{username},#{password},#{salt},#{createTime},#{state},#{realName},#{gender},#{nation},#{birth},#{urautograph},#{mobile},#{email},#{department},#{position},#{note},#{activateTime},#{code},#{maileCode})
  </insert> 
  
  <insert id="creUser" useGeneratedKeys="true" keyProperty="id"
            parameterType="User">
   <!--  INSERT INTO sys_user(username,password,salt,create_time,state,real_name,gender,nation,birth,urtname,urautograph,mobile,email,department,position,note,activate_time,code,maileCode)
    VALUES(#{username},#{password},#{salt},#{createTime},#{state},#{realName},#{gender},#{nation},#{birth},#{urtname},#{urautograph},#{mobile},#{email},#{department},#{position},#{note},#{activateTime},#{code},#{maileCode}) -->
  INSERT INTO sys_user(username,password,salt,create_time,state,real_name,gender,nation,birth,urautograph,mobile,email,department,position,note,activate_time,code,maileCode)
    VALUES(#{username},#{password},#{salt},#{createTime},#{state},#{realName},#{gender},#{nation},#{birth},#{urautograph},#{mobile},#{email},#{department},#{position},#{note},#{activateTime},#{code},#{maileCode})
  </insert> 
 
    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="long">
    DELETE FROM sys_user WHERE id = #{id}
  </delete>
    <!-- 用户信息实体结果映射 -->
    <resultMap type="User" id="userResult">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="createTime" column="create_time"/>
        <result property="state" column="state"/>
        <result property="realName" column="real_name"/>
        <result property="gender" column="gender"/>
        <result property="nation" column="nation"/>
        <result property="birth" column="birth"/>
        <!-- <result property="urtname" column="urtname"/> -->
        <result property="urautograph" column="urautograph"/>
        <result property="mobile" column="mobile"/>
        <result property="email" column="email"/>
        <result property="department" column="department"/>
        <result property="position" column="position"/>
        <result property="note" column="note"/>
        <result property="head" column="head"/>
        <result property="activateTime" column="activate_time"/>
        <result property="code" column="code"/>
		<result property="maileCode" column="maileCode"/>
        <association property="userRole" javaType="UserRole">
            <result property="userId" column="user_id"/>
            <result property="roleId" column="role_id"/>
        </association>

        <association property="role" javaType="Role">
            <result property="name" column="name"/>
            <result property="description" column="description"/>
            <result property="code" column="code"/>
        </association>

    </resultMap>
	<!-- 根据验证码查询用户 -->
	<select id="findUserByMaileCode" parameterType="String" resultMap="userResult">
		select * from sys_user where maileCode = #{maileCode}
	</select>
	<!-- 根据电话查询用户 -->
	<select id="findUserByPhone" parameterType="String" resultMap="userResult">
		select * from sys_user where mobile = #{mobile}
	</select>
	
    <!--根据邮箱查询用户-->
    <select id="findUserByEmail" parameterType="string" resultMap="userResult">
    SELECT * FROM sys_user
    WHERE email = #{email}
  </select>
    <!--根据激活码Code查询用户-->
    <select id="findUserByCode" parameterType="string" resultMap="userResult">
        SELECT * FROM sys_user
        WHERE code = #{code}
    </select>
    <!--根据名字查询用户-->
    <select id="findUserByUsername" parameterType="string" resultMap="userResult">
    SELECT * FROM sys_user
    WHERE username = #{username}
  </select>
    <!-- 查询所有用户信息(单表，仅查询用户详细信息) -->
    <select id="findAllUsers" resultMap="userResult">
    SELECT * FROM sys_user
  </select>

    <!-- 查询所有用户以及角色(多表)-->
    <select id="findAllUsersAndRoles" resultMap="userResult">
        SELECT u.*,r.*
        FROM sys_user u
        left join sys_user_role ur
        on u.id = ur.user_id
        left join sys_role  r
        on ur.role_id = r.id
        <if test="words !=null">
        	where u.username LIKE '%${words}%'
        </if>
        order by u.id
    </select>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="User">
        UPDATE sys_user
        <set>
            <if test="username != null">username=#{username},</if>
            <if test="password != null">password=#{password},</if>
            <if test="salt != null">salt=#{salt},</if>
            <if test="state != null">state=#{state},</if>
            <if test="realName != null">real_name=#{realName},</if>
            <if test="gender != null">gender=#{gender},</if>
            <if test="nation != null">nation=#{nation},</if>
            <if test="birth != null">birth=#{birth},</if>
           <!--  <if test="urtname != null">urtname=#{urtname},</if> -->
            <if test="urautograph != null">urautograph=#{urautograph},</if>
            <if test="mobile != null">mobile=#{mobile},</if>
            <if test="email != null">email=#{email},</if>
            <if test="department != null">department=#{department},</if>
            <if test="position != null">position=#{position},</if>
            <if test="note != null">note=#{note},</if>
            <if test="head != null">head=#{head},</if>
            <if test="activateTime != null">activate_time=#{activateTime},</if>
            <if test="code != null">code=#{code}</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 重置密码 -->
    <update id="resetPassword" parameterType="User">
        UPDATE sys_user
        <set>
            <if test="password != null">password=#{password},</if>
            <if test="salt != null">salt=#{salt}</if>
        </set>
        WHERE username = #{username}
    </update>

    <!-- 更改用户状态 -->
    <update id="updateState">
        UPDATE sys_user
        <set>
            <if test="state != null">state=#{state}</if>
        </set>
        WHERE username = #{username}
    </update>

    <!-- 删除用户角色关联 -->
    <delete id="deleteUserRole" parameterType="long">
    DELETE FROM sys_user_role
    WHERE user_id = #{userId}
  </delete>
    <!-- 添加用户角色关联 -->
    <insert id="addUserRole" parameterType="UserRole">
    INSERT INTO sys_user_role(user_id,role_id)
    VALUES(#{userId},#{roleId})
  </insert>

    <!--下面两个select用于UserRealm验证-->
    <!-- 根据用户名字查询相应角色Code -->
    <select id="findRolesCodeByUsername" parameterType="string" resultType="string">
    SELECT r.code
    FROM sys_user u,sys_role r,sys_user_role ur
    WHERE u.username = #{username}
    AND u.id = ur.user_id
    AND ur.role_id = r.id
  </select>
    <!-- 根据用户名字查询相应权限Code -->
    <select id="findPermissionsCodeByUsername" parameterType="string" resultType="string">
    SELECT p.code
    FROM sys_user u,sys_role r,sys_user_role ur,sys_permission p,sys_role_permission rp
    WHERE u.username = #{username}
    AND u.id = ur.user_id
    AND ur.role_id = r.id
    AND r.id = rp.role_id
    AND rp.permission_id = p.id
  </select>
   <select id="getName" parameterType="String" resultType="User">
	select id,username from sys_user  	
  </select> 
  
  
  <resultMap id="UserResultMap" type="UserPageResponse">
		<id column="id" property="urid" />
		<result column="username" property="username" />
		<result property="real_name" column="real_name"/>
		<result column="mobile" property="mobile" />
		<result column="state" property="state" />
		<result column="isum" property="isum" />
		<result column="gnum" property="gnum" />
		<result column="coupon" property="coupon" />
		<result column="voucher" property="voucher" />
		<result column="vmoney" property="vmoney" />

	</resultMap>


	<select id="select" resultMap="UserResultMap">
		SELECT su.id,su.`username`,su.`real_name`,su.`mobile`,su.`state`,
		inte.isum,gu.`gnum`,ucl.coupon,uvl.voucher,uvl.vmoney
		FROM
		sys_user su
		LEFT JOIN
		(SELECT
		inte.`urid` AS urid,
		inte.`isum` AS isum
		FROM
		integrations AS inte
		WHERE NOT EXISTS
		(SELECT
		1
		FROM
		integrations
		WHERE
		integrations.`urid` = inte.urid
		AND inte.igetdate &lt; igetdate)) inte
		ON su.id = inte.urid
		LEFT JOIN
		(SELECT
		gu.`urid` AS urid,
		gu.`gnum` AS
		gnum
		FROM
		goods_user AS gu
		WHERE NOT EXISTS
		(SELECT
		1
		FROM
		goods_user
		WHERE
		goods_user.`urid` = gu.urid
		AND gu.godate &lt; godate)) gu
		ON gu.urid =
		su.`id`
		LEFT JOIN
		(SELECT
		COUNT(*) AS coupon,
		uc.urid AS urid
		FROM
		u_c_log
		uc
		WHERE uc.ucInvalid IS NULL
		GROUP BY uc.urid) ucl
		ON su.`id` = ucl.urid
		LEFT JOIN
		(SELECT
		COUNT(*) AS voucher,
		SUM(vmoney) AS vmoney,
		uv.urid
		FROM
		u_v_log uv
		INNER JOIN voucher vo
		ON uv.`vid` = vo.`vid`
		WHERE
		uv.`uvlInvalid` IS NULL
		GROUP BY uv.urid) uvl
		ON su.`id` = uvl.urid
		<where>
			<if test="username !=null">
				username like concat('%',concat(#{username},'%'))
			</if>
			<if test="real_name !=null">
				real_name like concat('%',concat(#{real_name},'%'))
			</if>
			<if test="mobile !=null">
				mobile like concat('%',concat(#{mobile},'%'))
			</if>
			<if test="gnum !=null and minNum !=null and maxNum !=null ">
				gnum BETWEEN concat(#{minNum}) AND concat(#{maxNum})
			</if>
			<if test="vmoney !=null and minNum !=null and maxNum !=null">
				vmoney BETWEEN concat(#{minNum}) AND concat(#{maxNum})
			</if>
			<if test="coupon !=null and minNum !=null and maxNum !=null">
				coupon BETWEEN concat(#{minNum}) AND concat(#{maxNum})
			</if>
			<if test="isum !=null and minNum !=null and maxNum !=null">
				isum BETWEEN concat(#{minNum}) AND concat(#{maxNum})
			</if>
		</where>
		order by su.id ASC
	</select>
  
  <select id="finduser" resultMap="userResult">
	SELECT * FROM sys_user WHERE department IS NOT NULL AND POSITION IS NOT NULL
</select>
  
  <select id="findname" resultType="string" parameterType="int">
  	select username from sys_user where id=#{id}
  </select>
  
  <select id="findid" resultType="int" parameterType="string">
  	select id from sys_user where username=#{username}
  </select>
  
</mapper>